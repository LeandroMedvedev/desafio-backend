openapi: 3.0.3
info:
  title: ''
  version: 0.0.0
paths:
  /accounts/:
    get:
      operationId: accounts_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - accounts
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedLessDetailedAccountList'
          description: ''
    post:
      operationId: accounts_create
      tags:
      - accounts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Account'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Account'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Account'
        required: true
      security:
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
          description: ''
  /accounts/{id}/:
    get:
      operationId: accounts_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - accounts
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailedAccount'
          description: ''
    put:
      operationId: accounts_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - accounts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountUpdate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AccountUpdate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AccountUpdate'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountUpdate'
          description: ''
    patch:
      operationId: accounts_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - accounts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedAccountUpdate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedAccountUpdate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedAccountUpdate'
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountUpdate'
          description: ''
    delete:
      operationId: accounts_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - accounts
      security:
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /accounts/signin/:
    post:
      operationId: accounts_signin_create
      tags:
      - accounts
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /answers/:
    get:
      operationId: answers_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - answers
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedDetailedAnswerList'
          description: ''
    post:
      operationId: answers_create
      tags:
      - answers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Answer'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Answer'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Answer'
        required: true
      security:
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Answer'
          description: ''
  /answers/{id}/:
    get:
      operationId: answers_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - answers
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailedAnswer'
          description: ''
    put:
      operationId: answers_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - answers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DetailedAnswer'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DetailedAnswer'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DetailedAnswer'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailedAnswer'
          description: ''
    patch:
      operationId: answers_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - answers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedDetailedAnswer'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedDetailedAnswer'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedDetailedAnswer'
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailedAnswer'
          description: ''
    delete:
      operationId: answers_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - answers
      security:
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /categories/:
    get:
      operationId: categories_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - categories
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedCategoryList'
          description: ''
    post:
      operationId: categories_create
      tags:
      - categories
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Category'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Category'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Category'
        required: true
      security:
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
          description: ''
  /categories/{id}/:
    get:
      operationId: categories_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - categories
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailedCategory'
          description: ''
    put:
      operationId: categories_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - categories
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Category'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Category'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Category'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
          description: ''
    patch:
      operationId: categories_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - categories
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedCategory'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedCategory'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedCategory'
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
          description: ''
    delete:
      operationId: categories_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - categories
      security:
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /questions/:
    get:
      operationId: questions_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - questions
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedLessDetailedQuestionList'
          description: ''
    post:
      operationId: questions_create
      tags:
      - questions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Question'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Question'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Question'
        required: true
      security:
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Question'
          description: ''
  /questions/{id}/:
    get:
      operationId: questions_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - questions
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailedQuestion'
          description: ''
    put:
      operationId: questions_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - questions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LessDetailedQuestion'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/LessDetailedQuestion'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/LessDetailedQuestion'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LessDetailedQuestion'
          description: ''
    patch:
      operationId: questions_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - questions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedLessDetailedQuestion'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedLessDetailedQuestion'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedLessDetailedQuestion'
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LessDetailedQuestion'
          description: ''
    delete:
      operationId: questions_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - questions
      security:
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /quizzes/:
    get:
      operationId: quizzes_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - quizzes
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedQuizList'
          description: ''
    post:
      operationId: quizzes_create
      tags:
      - quizzes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LessDetailedQuiz'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/LessDetailedQuiz'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/LessDetailedQuiz'
        required: true
      security:
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LessDetailedQuiz'
          description: ''
  /quizzes/{id}/:
    get:
      operationId: quizzes_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - quizzes
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailedQuiz'
          description: ''
    put:
      operationId: quizzes_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - quizzes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Quiz'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Quiz'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Quiz'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quiz'
          description: ''
    patch:
      operationId: quizzes_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - quizzes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedQuiz'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedQuiz'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedQuiz'
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quiz'
          description: ''
    delete:
      operationId: quizzes_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - quizzes
      security:
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /quizzes/questions/{id}/:
    get:
      operationId: quizzes_questions_list
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - quizzes
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedQuizQuestionList'
          description: ''
  /quizzes/random/{id}/:
    get:
      operationId: quizzes_random_list
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - quizzes
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedRandomQuestionsQuizList'
          description: ''
components:
  schemas:
    Account:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        date_joined:
          type: string
          format: date-time
          readOnly: true
        email:
          type: string
          format: email
          maxLength: 100
        password:
          type: string
          writeOnly: true
          maxLength: 128
        first_name:
          type: string
          maxLength: 50
        last_name:
          type: string
          maxLength: 50
        is_superuser:
          type: boolean
          title: Superuser status
          description: Designates that this user has all permissions without explicitly
            assigning them.
        is_active:
          type: boolean
          title: Active
          description: Designates whether this user should be treated as active. Unselect
            this instead of deleting accounts.
      required:
      - date_joined
      - email
      - first_name
      - id
      - last_name
      - password
    AccountUpdate:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        date_joined:
          type: string
          format: date-time
          readOnly: true
        email:
          type: string
          format: email
          maxLength: 100
        password:
          type: string
          writeOnly: true
          maxLength: 128
        first_name:
          type: string
          maxLength: 50
        last_name:
          type: string
          maxLength: 50
        is_superuser:
          type: boolean
          title: Superuser status
          description: Designates that this user has all permissions without explicitly
            assigning them.
        is_active:
          type: boolean
          title: Active
          description: Designates whether this user should be treated as active. Unselect
            this instead of deleting accounts.
      required:
      - date_joined
      - email
      - first_name
      - id
      - last_name
      - password
    Answer:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        answer:
          type: string
          maxLength: 200
        is_correct:
          type: boolean
        question:
          type: string
          format: uuid
      required:
      - answer
      - id
      - is_correct
      - question
    Category:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
          maxLength: 100
      required:
      - id
      - name
    DetailedAccount:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        date_joined:
          type: string
          format: date-time
        email:
          type: string
          format: email
          maxLength: 100
        first_name:
          type: string
          maxLength: 50
        last_name:
          type: string
          maxLength: 50
        is_staff:
          type: boolean
          title: Staff status
          description: Designates whether the user can log into this admin site.
        is_active:
          type: boolean
          title: Active
          description: Designates whether this user should be treated as active. Unselect
            this instead of deleting accounts.
        is_superuser:
          type: boolean
          title: Superuser status
          description: Designates that this user has all permissions without explicitly
            assigning them.
        categories:
          type: array
          items:
            $ref: '#/components/schemas/Category'
      required:
      - categories
      - email
      - first_name
      - id
      - last_name
    DetailedAnswer:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        answer:
          type: string
          maxLength: 200
        is_correct:
          type: boolean
      required:
      - answer
      - id
      - is_correct
    DetailedCategory:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
          maxLength: 100
        quizzes:
          type: array
          items:
            $ref: '#/components/schemas/Quiz'
      required:
      - id
      - name
      - quizzes
    DetailedQuestion:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        question:
          type: string
          maxLength: 200
        level:
          $ref: '#/components/schemas/LevelEnum'
        created_at:
          type: string
          format: date-time
          readOnly: true
        is_active:
          type: boolean
        quiz:
          type: string
          format: uuid
        answers:
          type: array
          items:
            $ref: '#/components/schemas/QuestionAnswer'
      required:
      - answers
      - created_at
      - id
      - is_active
      - question
      - quiz
    DetailedQuiz:
      type: object
      properties:
        name:
          type: string
          maxLength: 100
        id:
          type: string
          format: uuid
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        category:
          type: string
          format: uuid
        questions:
          type: array
          items:
            $ref: '#/components/schemas/SmallestQuestion'
      required:
      - category
      - created_at
      - id
      - name
      - questions
    LessDetailedAccount:
      type: object
      properties:
        email:
          type: string
          format: email
          maxLength: 100
        date_joined:
          type: string
          format: date-time
        id:
          type: string
          format: uuid
          readOnly: true
        is_superuser:
          type: boolean
          title: Superuser status
          description: Designates that this user has all permissions without explicitly
            assigning them.
      required:
      - email
      - id
    LessDetailedQuestion:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        question:
          type: string
          maxLength: 200
        level:
          $ref: '#/components/schemas/LevelEnum'
        is_active:
          type: boolean
        created_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_at
      - id
      - is_active
      - question
    LessDetailedQuiz:
      type: object
      properties:
        name:
          type: string
          maxLength: 100
        id:
          type: string
          format: uuid
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        category:
          type: string
          format: uuid
      required:
      - category
      - created_at
      - id
      - name
    LevelEnum:
      enum:
      - Fácil
      - Moderado
      - Difícil
      - Muito Difícil
      type: string
    PaginatedCategoryList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Category'
    PaginatedDetailedAnswerList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/DetailedAnswer'
    PaginatedLessDetailedAccountList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/LessDetailedAccount'
    PaginatedLessDetailedQuestionList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/LessDetailedQuestion'
    PaginatedQuizList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Quiz'
    PaginatedQuizQuestionList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/QuizQuestion'
    PaginatedRandomQuestionsQuizList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/RandomQuestionsQuiz'
    PatchedAccountUpdate:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        date_joined:
          type: string
          format: date-time
          readOnly: true
        email:
          type: string
          format: email
          maxLength: 100
        password:
          type: string
          writeOnly: true
          maxLength: 128
        first_name:
          type: string
          maxLength: 50
        last_name:
          type: string
          maxLength: 50
        is_superuser:
          type: boolean
          title: Superuser status
          description: Designates that this user has all permissions without explicitly
            assigning them.
        is_active:
          type: boolean
          title: Active
          description: Designates whether this user should be treated as active. Unselect
            this instead of deleting accounts.
    PatchedCategory:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
          maxLength: 100
    PatchedDetailedAnswer:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        answer:
          type: string
          maxLength: 200
        is_correct:
          type: boolean
    PatchedLessDetailedQuestion:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        question:
          type: string
          maxLength: 200
        level:
          $ref: '#/components/schemas/LevelEnum'
        is_active:
          type: boolean
        created_at:
          type: string
          format: date-time
          readOnly: true
    PatchedQuiz:
      type: object
      properties:
        name:
          type: string
          maxLength: 100
        id:
          type: string
          format: uuid
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
    Question:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        question:
          type: string
          maxLength: 200
        level:
          $ref: '#/components/schemas/LevelEnum'
        created_at:
          type: string
          format: date-time
          readOnly: true
        is_active:
          type: boolean
        quiz:
          type: string
          format: uuid
      required:
      - created_at
      - id
      - is_active
      - question
      - quiz
    QuestionAnswer:
      type: object
      properties:
        answer:
          type: string
          maxLength: 200
        is_correct:
          type: boolean
      required:
      - answer
      - is_correct
    Quiz:
      type: object
      properties:
        name:
          type: string
          maxLength: 100
        id:
          type: string
          format: uuid
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_at
      - id
      - name
    QuizQuestion:
      type: object
      properties:
        quiz:
          type: string
          readOnly: true
        question:
          type: string
          maxLength: 200
        answers:
          type: array
          items:
            $ref: '#/components/schemas/DetailedAnswer'
          readOnly: true
      required:
      - answers
      - question
      - quiz
    RandomQuestionsQuiz:
      type: object
      properties:
        question:
          type: string
          maxLength: 200
        answers:
          type: array
          items:
            $ref: '#/components/schemas/DetailedAnswer'
          readOnly: true
      required:
      - answers
      - question
    SmallestQuestion:
      type: object
      properties:
        question:
          type: string
          maxLength: 200
      required:
      - question
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
    cookieAuth:
      type: apiKey
      in: cookie
      name: sessionid
    tokenAuth:
      type: apiKey
      in: header
      name: Authorization
      description: Token-based authentication with required prefix "Token"
